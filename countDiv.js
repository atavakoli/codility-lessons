function solution(A, B, K) {
  // always snap A to a lower multiple of K (even if it's already on
  // a multiple of K)
  return Math.floor((B - (A - (A % K == 0 ? K : A%K))) / K);
}

//           11111111112
// 012345678901234567890
// *-*-*-*-*-*-*-*-*-*-*
//       |----|
console.log(solution(6,11,2));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//   |----------|
console.log(solution(2,13,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//   |--------|
console.log(solution(2,11,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//      |----------|
console.log(solution(5,16,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//      |--------|
console.log(solution(5,14,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//       |--------|
console.log(solution(6,15,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//      |----|
console.log(solution(5,10,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//       |----|
console.log(solution(6,11,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//       |---|
console.log(solution(6,10,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//      |---|
console.log(solution(5,9,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//       |--|
console.log(solution(6,9,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//       |
console.log(solution(6,6,5));

//           11111111112
// 012345678901234567890
// *----*----*----*----*
//      |
console.log(solution(5,5,5));
